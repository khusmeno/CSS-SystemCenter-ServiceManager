<?xml version="1.0" encoding="utf-8"?>
<ManagementPack ContentReadable="true" SchemaVersion="2.0" OriginalSchemaVersion="1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<Manifest>
		<Identity>
			<ID>MicrosoftSupport.SCSM.HealthStatus.Monitoring</ID>
			<Version>1.0.0.0</Version>
		</Identity>
		<Name>MicrosoftSupport.SCSM.HealthStatus.Monitoring</Name>
		<References>
			<Reference Alias="System">
				<ID>System.Library</ID>
				<Version>7.5.8501.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>     
			<Reference Alias="SystemCenter">
				<ID>Microsoft.SystemCenter.Library</ID>
				<Version>1.0.0.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>	 

			<Reference Alias="AdminUI">
				<ID>Microsoft.EnterpriseManagement.ServiceManager.UI.Administration</ID>
				<Version>10.19.1035.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>

			<Reference Alias="AdminItem">
				<ID>System.AdminItem.Library</ID>
				<Version>7.5.8501.0</Version>
				<PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
			</Reference>

		</References>
	</Manifest>

	<Categories>  
		<Category ID="MicrosoftSupport.SCSM.DiagTool.Starter.Category" Target="MicrosoftSupport.SCSM.DiagTool.Starter" Value="AdminUI!Microsoft.EnterpriseManagement.ServiceManager.Rules.WorkflowSubscriptions" />  
	</Categories>

	<Monitoring>
		<Rules>

			<Rule ID="MicrosoftSupport.SCSM.DiagTool.Starter" Enabled="true" Target="SystemCenter!Microsoft.SystemCenter.SubscriptionWorkflowTarget" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">      
				<Category>System</Category>
				<DataSources>
					<DataSource ID="Scheduler" TypeID="System!System.Scheduler">
						<Scheduler>
							<SimpleReccuringSchedule>                
								 <Interval Unit="Minutes">3</Interval>
							</SimpleReccuringSchedule>
							<ExcludeDates />
						</Scheduler>
					</DataSource>
				</DataSources>
				<WriteActions>
					<WriteAction ID="ExecuteCommand" TypeID="System!System.CommandExecuter" RunAs="SystemCenter!Microsoft.SystemCenter.DatabaseWriteActionAccount">
						<ApplicationName>C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe</ApplicationName>
						<WorkingDirectory />
						<CommandLine>-noninteractive -noprofile -executionpolicy bypass -Command "&amp; '$File/MicrosoftSupport.SCSM.DiagTool.Starter.ps1$' "</CommandLine>   
						<TimeoutSeconds>150</TimeoutSeconds>
						<RequireOutput>true</RequireOutput>
						<Files>
							<File>
								<Name>MicrosoftSupport.SCSM.DiagTool.Starter.ps1</Name>
								<Contents>
function Invoke-AlternativeSqlCmd_WithoutTimeout($SQLInstance, $SQLDatabase, $SQLQuery)
{
    $SqlConnection = New-Object System.Data.SqlClient.SqlConnection
    $SqlConnection.ConnectionString = "Server=$SQLInstance; Database=$SQLDatabase; Trusted_Connection=True"
    $SqlConnection.Open() 

    $SqlAdp = New-Object System.Data.SqlClient.SqlDataAdapter
    $SqlCmd = New-Object System.Data.SqlClient.SqlCommand
    $SqlCmd.CommandText = $SQLQuery
    $SqlCmd.Connection = $SqlConnection
    $SqlCmd.CommandTimeout = 0 # do NOT change this!
    $SqlAdp.SelectCommand = $SqlCmd
    $DS = New-Object System.Data.DataSet
    $SqlAdp.Fill($DS) | out-null  # keep the out-null otherwise $DS will return as Object[]
    return $DS;
}
function IsThisScsmDwMgmtServer() {
    $regSetupExists = Test-Path -Path 'HKLM:\SOFTWARE\Microsoft\System Center\2010\Service Manager\Setup' -ErrorAction SilentlyContinue
    $regMGExists = Test-Path -Path 'HKLM:\SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Server Management Groups' -ErrorAction SilentlyContinue
    $regSDKType = (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\System Center\2010\Common\SDK Service' -ErrorAction SilentlyContinue)."SDK Service Type"

    return ($regSetupExists -and $regMGExists -and ($regSDKType -eq 2))
}

$folder = $env:TEMP; 
$fileFullPath = [System.IO.Path]::Combine($folder, "SCSM-Diagnostic-Tool.ps1");

$SQLInstance_SCSM = (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\System Center\2010\Common\Database').DatabaseServerName
$SQLDatabase_SCSM = (Get-ItemProperty -Path 'HKLM:\SOFTWARE\Microsoft\System Center\2010\Common\Database').DatabaseName

if ((IsThisScsmDwMgmtServer)) {
	$SQL_SMDBInfo=@'
    select DataSourceName_AC09B683_AE61_BDCA_6383_2007DB60859D as DataSourceName_SMDB,DatabaseServer_CD2D9C2A_39C2_CE05_D84C_AC42E429D191 as SQLInstance_SMDB,Database_D59DC40A_E438_1A05_C231_E3BD50E5DD44 as SQLDatabase_SMDB,SdkServer_0E227991_743F_4854_FF8B_273C1688DFEB  as SDKServer_SMDB from MTV_Microsoft#SystemCenter#DataWarehouse#CMDBSource where BaseManagedEntityId in (select BaseManagedEntityId from BaseManagedEntity where BaseManagedTypeId='0222340F-D0CD-6B06-70A6-AA0A1504F428' and name not like 'DW\_%' escape'\')
'@
$SQL_SMDBInfo = $SQL_SMDBInfo.Replace("#","$")

    $SMDBInfo = (Try-Invoke-SqlCmd -SQLInstance $SQLInstance_SCSM -SQLDatabase $SQLDatabase_SCSM -Query $SQL_SMDBInfo).Tables[0]
	if ($SMDBInfo) {
		$SQLInstance_SCSM = $SMDBInfo.SQLInstance_SMDB
		$SQLDatabase_SCSM = $SMDBInfo.SQLDatabase_SMDB
	}
}

$ds = Invoke-AlternativeSqlCmd_WithoutTimeout -SQLInstance $SQLInstance_SCSM -SQLDatabase $SQLDatabase_SCSM -SQLQuery "select ResourceValue from Resource where ResourceName='MicrosoftSupport.SCSM.DiagTool.Starter.ScriptResource'"
$bytes = $ds.Tables[0].Rows[0].ResourceValue
$scriptBody = [System.Text.Encoding]::UTF8.GetString($bytes)
[System.IO.File]::WriteAllText($fileFullPath,$scriptBody);

Start-Process -FilePath "C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe" -ArgumentList "-noninteractive -noprofile -executionpolicy bypass -File $fileFullPath -acceptEula -noSelfUpdate -startedByRule"
								</Contents>  
							</File>
						</Files>
					</WriteAction> 
				</WriteActions>
			</Rule>

		</Rules>   
	</Monitoring>
	<LanguagePacks>
		<LanguagePack ID="ENU" IsDefault="true">
			<DisplayStrings>
				<DisplayString ElementID="MicrosoftSupport.SCSM.HealthStatus.Monitoring">
					<Name>Microsoft Support.SCSM - Health Status Monitoring</Name>
				</DisplayString>

				<DisplayString ElementID="MicrosoftSupport.SCSM.DiagTool.Starter">
					<Name>Microsoft Support.SCSM - Diagnostic Tool Starter</Name>
				</DisplayString>

			</DisplayStrings>
		</LanguagePack>
	</LanguagePacks>
	<Resources>
		<Resource ID="MicrosoftSupport.SCSM.DiagTool.Starter.ScriptResource" Accessibility="Public" FileName="SCSM-Diagnostic-Tool.ps1" HasNullStream="false" />
	</Resources> 
</ManagementPack>